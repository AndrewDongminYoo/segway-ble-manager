buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        // noinspection DifferentKotlinGradleVersion
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0'
    }
}

def isNewArchitectureEnabled() {
    return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"

if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
    return rootProject.ext.has(name)
        ? rootProject.ext.get(name)
        : project.properties["SegwayBleManager_" + name]
}

def getExtOrIntegerDefault(name) {
    return getExtOrDefault(name).toInteger()
}

android {
    namespace "com.gbike.segwayblemanager"
    testNamespace 'com.gbike.segwayblemanager.test'
    compileSdk getExtOrIntegerDefault("compileSdk")
    ndkVersion getExtOrDefault("ndkVersion")
    buildToolsVersion getExtOrDefault("buildToolsVersion")

    defaultConfig {
        minSdkVersion getExtOrIntegerDefault("minSdkVersion")
        targetSdk getExtOrIntegerDefault("targetSdkVersion")
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        signingConfig signingConfigs.debug
        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }
    }
    buildTypes {
        release {
            // signingConfig signingConfigs.release
            minifyEnabled false
            versionNameSuffix 'prod'
        }
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix 'dev'
        }
    }

    lintOptions {
        disable "GradleCompatible"
        disable "DeprecatedAndroidGradlePlugin"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        kotlinOptions {
           setJvmTarget("11")
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs += ["libs"]
            //noinspection GroovyImplicitNullArgumentCall
            if (isNewArchitectureEnabled()) {
                java.srcDirs += [
                    "src/newarch",
                    // This is needed to build Kotlin project with NewArch enabled
                    "${project.buildDir}/generated/source/codegen/java"
                ]
            } else {
                java.srcDirs += ["src/oldarch"]
            }
        }
    }
}

repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
}

dependencies {
    //noinspection GradleDependency
    implementation 'com.facebook.react:react-android:0.72.0-rc.1'
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation files('libs/sd_ble_sdk_v1.1.2.jar')
}

if (isNewArchitectureEnabled()) {
    react {
        jsRootDir = file("../src/")
        libraryName = "SegwayBleManager"
        codegenJavaPackageName = "com.gbike.segwayblemanager"
    }
}
